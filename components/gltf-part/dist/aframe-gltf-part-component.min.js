!function(t){function e(a){if(r[a])return r[a].exports;var o=r[a]={exports:{},id:a,loaded:!1};return t[a].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e){var r={},a={};AFRAME.registerComponent("gltf-part",{schema:{buffer:{default:!0},part:{type:"string"},src:{type:"asset"}},update:function(){var t=this.el,e=document.querySelector("a-scene");!this.data.part&&this.data.src||this.getModel(function(r){r&&(e.systems.material.registerMaterial(r.material),t.setObject3D("mesh",r),t.emit("model-loaded",{format:"gltf",model:r}))})},getModel:function(t){var e=this;return a[this.data.src]?void t(this.selectFromModel(a[this.data.src])):r[this.data.src]?r[this.data.src].then(function(r){t(e.selectFromModel(r))}):void(r[this.data.src]=new Promise(function(o){(new THREE.GLTFLoader).load(e.data.src,function(s){var n=s.scene||s.scenes[0];a[e.data.src]=n,delete r[e.data.src],t(e.selectFromModel(n)),o(n)},function(){},function(t){var r=t&&t.message?t.message:"Failed to load glTF model";console.warn(r),this.el.emit("model-error",{format:"gltf",src:e.data.src})}.bind(e))}))},selectFromModel:function(t){var e;if(e=t.getObjectByName(this.data.part),!e)return void console.error("[gltf-part] `"+this.data.part+"` not found in model.");var r=e.getObjectByProperty("type","Mesh");return r?new THREE.Mesh(r.geometry,r.material):void console.error("[gltf-part] `"+this.data.part+"` has no Mesh.")}})}]);